
name: Build and Push Image to AWS ECR and Deploy to ECS
on:
  push:
    branches: [ master ] # trigger workflow when pushing to master branch

env:
  AWS_REGION: us-east-2
  ECR_REPOSITORY: stock-price-assistant
  ECS_SERVICE: stock-price-assistant-service                 
  ECS_CLUSTER: stock-price-cluster              
  ECS_TASK_DEFINITION: stock-price-assistant-task 
                                              
  CONTAINER_NAME: stock-price-assistant-container # to find this in task in AWS ECS console, click on the task, you can see name of container in the container section          
                                            

jobs:
  build-push-deploy: # Define the main job and its steps
    name: Build and Push to ECR and Deploy to ECS # job name
    runs-on: ubuntu-latest 

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch all history including tags for proper versioning

    - name: Configure AWS credentials # log in to AWS using secrets
      uses: aws-actions/configure-aws-credentials@v3 #v3 is the last version, earlier ones are about to be deprecated
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR 
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Automatic Tagging of Image
      id: increment-git-tag
      run: |
        bash ./build/handle_image_version.sh -v patch 
      #options: major, minor, patch (semantic versioning)

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{env.ECR_REPOSITORY}} 
        IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }} 
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: ./aws_tasks/task-definition.json
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true

